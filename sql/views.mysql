FROM sampleskuimport LEFT JOIN `data_imagepaths`.`zimages1_photoselects` ON `sampleskuimport`.`colorstyle` = `zimages1_photoselects`.`colorstyle` WHERE `zimages1_photoselects`.`colorstyle` like




SELECT `tsnp`.`colorstyle`, `tsnp`.`brand`, `tsnp`.`production_status`, `tsnp`.`gender`, `tsnp`.`category`, `tsnp`.`product_type`, `tpush`.`file_path`, `tpush`.`photo_date`
FROM `data_imagepaths`.`product_snapshot` tsnp
LEFT OUTER JOIN `data_imagepaths`.`push_photoselects` tpush
ON `tpush`.`colorstyle` = `tsnp`.`colorstyle`
WHERE `tsnp`.`production_status` = "Production Incomplete"
ORDER BY `tsnp`.`colorstyle` DESC

sed 's/'$one'/'$two'/g'); mv "$file" "$new_file"; done; done;

walked_fashion = recursive_dirlist(dir_archfashion)
stylestringsdict = {}
for line in walked_fashion:
    stylestringsdict_tmp = {}
    photo_date = line.split('/')[4][:6]
    file_path = line
    colorstyle = line.split('/')[-1][:9]
    alt = line.split('_')[-1]
    alt = alt.strip('.jpg')
    mo = photo_date[:2]
    dy = photo_date[2:4]
    yr = photo_date[4:6]
    photo_date = "20{0}-{1}-{2}".format(yr,mo,dy)
    print "{0}, {1}, {2}, {3}".format(colorstyle,photo_date,file_path,alt)
    photo_date = photo_date.replace(':','-')
    stylestringsdict_tmp['colorstyle'] = colorstyle
    stylestringsdict_tmp['photo_date'] = photo_date
    stylestringsdict_tmp['file_path'] = file_path
    stylestringsdict_tmp['alt'] = alt
    stylestringsdict[file_path] = stylestringsdict_tmp
    file_path_reletive = file_path.replace('/mnt/Post_Ready/Retouch_', '/Retouch_')
    file_path_reletive = file_path.replace('JPG', 'jpg')

for k,v in stylestringsdict.iteritems():
    try:
        mysql_engine = sqlalchemy.create_engine('mysql+mysqldb://root:mysql@prodimages.ny.bluefly.com:3301/data_imagepaths')
        connection = mysql_engine.connect()
        connection.execute("""INSERT INTO post_ready_original (colorstyle, photo_date, file_path, alt) VALUES (%s, %s, %s, %s)""", v['colorstyle'], v['photo_date'], v['file_path'],  v['alt'])
        print "Successful Insert to Post_Ready_Originals --> {0}".format(k)
    except sqlalchemy.exc.IntegrityError:
        print "Duplicate Entry {0}".format(k)




--- LAVENDER REPORT--OLD not Live
SELECT COUNT( t1.`colorstyle` ) as "Outstanding",
t1.`event_id` as "Event_ID", t1.`ev_start`, t1.`product_category` as "Category",
COUNT(
CASE WHEN t2.`sample_status` =  "Sample Sent to Bluefly" OR t2.`sample_status` =  "Scanned In at Bluefly"
THEN 1
ELSE NULL
END ) as "Smpl_NY",
COUNT(
CASE WHEN t2.`sample_status` =  "Pending Sample"
THEN 1
ELSE NULL
END ) as "Pnd_Smpl",
COUNT(
CASE WHEN t1.`image_dt` =  '0000-00-00'
THEN 1
ELSE NULL
END ) as "Need_Img",
COUNT(
CASE WHEN t1.`copy_dt` =  '0000-00-00'
THEN 1
ELSE NULL
END ) as "Need_Copy",
t1.`event_title` as "Event_Title", t1.`event_group` as "Group"
FROM  `data_imports`.`events_style_statusplus` t1
left join `data_imagepaths`.`product_snapshot_live` t2 on t1.`colorstyle` = t2.`colorstyle`
WHERE t1.`ev_start`
BETWEEN SYSDATE( ) - INTERVAL 1
DAY AND SYSDATE( ) + INTERVAL 21
DAY
AND
t1.`production_status` = "Production Incomplete"
GROUP BY t1.`event_id` , t1.`production_status` , t1.`event_title`, t1.`product_category` , t1.`ev_start`
ORDER by t1.`event_id`

------COMPLETION REPORTS VIEWS
SELECT *
FROM viewlive_count_prodcomplete v3
right join viewlive_count_retouch v1 on v3.Prod_Complete = v1.Retouching_Done
right join viewlive_count_copy v2 on v3.Prod_Complete = v2.Copy_Done
right join viewcount_photography v4 on v3.Prod_Complete = v4.Shoot_Date
LIMIT 10

SELECT *
FROM viewlive_count_prodcomplete
WHERE  datecmp='Prod_Complete'
UNION ALL
SELECT *
FROM   viewlive_count_copy
WHERE  datecmp='Copy_Done'
UNION ALL
SELECT *
FROM   viewlive_count_retouchSELECT v1.Retouching_Done FROM viewlive_count_retouch v1
union all
SELECT v2.Copy_Done FROM viewlive_count_copy v2
union all
SELECT v3.Prod_Complete FROM viewlive_count_prodcomplete v3
WHERE  Shoot_Date='Retouching_Done'
UNION ALL
SELECT *
FROM   viewcount_photography
WHERE  Shoot_Date='Shoot_Date'
LIMIT 10


SELECT *
FROM viewlive_count_retouch v1
right join viewlive_count_prodcomplete v3 on v1.Retouching_Done = v3.Prod_Complete
right join viewlive_count_copy v2 on v1.Retouching_Done = v2.Copy_Done
right join viewcount_photography v4 on v1.Retouching_Done = v4.Shoot_Date
order by v3.Prod_Complete DESC
LIMIT 10
Union all

SELECT *
FROM viewlive_count_prodcomplete v3
left join viewlive_count_retouch v1 on v3.Prod_Complete = v1.Retouching_Done
left join viewlive_count_copy v2 on v3.Prod_Complete = v2.Copy_Done
LIMIT 10
Union all

SELECT *
FROM viewlive_count_copy v2
left join viewlive_count_retouch v1 on v2.Copy_Done = v1.Retouching_Done
left join viewlive_count_prodcomplete v3 on v2.Copy_Done = v3.Prod_Complete
LIMIT 10
union all
SELECT *
FROM viewlive_count_prodcomplete v3
inner join viewlive_count_retouch v1 on v3.Prod_Complete = v1.Retouching_Done
inner join viewlive_count_copy v2 on v3.Prod_Complete = v2.Copy_Done
inner join viewcount_photography v4 on v3.Prod_Complete = v4.Shoot_Date
LIMIT 10
Union all
SELECT *
FROM viewlive_count_retouch v1
inner join viewlive_count_prodcomplete v3 on v1.Retouching_Done = v3.Prod_Complete
inner join viewlive_count_copy v2 on v1.Retouching_Done = v2.Copy_Done
inner join viewcount_photography v4 on v1.Retouching_Done = v4.Shoot_Date
LIMIT 10
Union all
SELECT *
FROM viewlive_count_copy v2
inner join viewlive_count_retouch v1 on v2.Copy_Done = v1.Retouching_Done
inner join viewlive_count_prodcomplete v3 on v2.Copy_Done = v3.Prod_Complete
inner join viewcount_photography v4 on v2.Copy_Done = v4.Shoot_Date
LIMIT 10
Union all
SELECT *
FROM viewcount_photography v4
inner join viewlive_count_retouch v1 on v4.Shoot_Date = v1.Retouching_Done
inner join viewlive_count_copy v2 on v4.Shoot_Date = v2.Copy_Done
inner join viewlive_count_prodcomplete v3 on v4.Shoot_Date = v3.Prod_Complete
LIMIT 10



SELECT *
FROM viewlive_count_prodcomplete v3
INNER JOIN viewlive_count_retouch v1 ON v3.Prod_Complete = v1.Retouching_Done
INNER JOIN viewlive_count_copy v2 ON v3.Prod_Complete = v2.Copy_Done
INNER JOIN viewcount_photography v4 ON v3.Prod_Complete = v4.Shoot_Date
LIMIT 10



SELECT *
FROM viewlive_count_prodcomplete v3
left outer join viewlive_count_retouch v1 on v3.Prod_Complete = v1.Retouching_Done
left outer join viewlive_count_copy v2 on v3.Prod_Complete = v2.Copy_Done
left outer join viewcount_photography v4 on v3.Prod_Complete = v4."Total Shots"
LIMIT 10

SELECT v1.Colorstyles, v2.Colorstyles, v3.Colorstyles
FROM viewlive_count_prodcomplete v3
join viewlive_count_retouch v1 on v3.Prod_Complete = v1.Retouching_Done
join viewlive_count_copy v2 on v3.Prod_Complete = v2.Copy_Done
LIMIT 5

SELECT *
FROM viewlive_count_prodcomplete v3
left outer join viewlive_count_retouch v1 on v3.Prod_Complete = v1.Retouching_Done
left outer join viewlive_count_copy v2 on v3.Prod_Complete = v2.Copy_Done
left outer join viewcount_photography v4 on v3.Prod_Complete = v4.Shoot_Date
LIMIT 10



SELECT COUNT( t1.`colorstyle` ) as "Outstanding",
t1.`product_category` as "Category",
COUNT(
CASE WHEN t1.`sample_status` =  "Scanned In at Bluefly" AND t1.`status_dt` = SYSDATE()
THEN 1
ELSE NULL
END ) as "Arrived_Today",
COUNT(
CASE WHEN t1.`sample_status` =  "Scanned Out to Warehouse" AND t1.`status_dt` = SYSDATE()
THEN 1
ELSE NULL
END ) as "Returned_Today",
COUNT(
CASE WHEN t1.`image_dt` =  SYSDATE( )
THEN 1
ELSE NULL
END ) as "Img_Done",
COUNT(
CASE WHEN t1.`copy_dt` =  SYSDATE( )
THEN 1
ELSE NULL
END ) as "Copy_Done",
COUNT(
CASE WHEN t1.`production_complete_dt` =  SYSDATE( )
THEN 1
ELSE NULL
END ) as "Prd_Complete",
FROM
     `data_imports`.`product_snapshot_live` t1

WHERE
     product_snapshot_live.sample_status = "Scanned In at Bluefly"
     OR product_snapshot_live.sample_status = "Scanned Out to Warehouse"
GROUP BY t1.`production_status`, t1.`product_category`




SELECT COUNT( t1.`colorstyle` ) as "Outstanding",
t1.`product_category` as "Category",
COUNT(
CASE WHEN t1.`sample_status` =  "Scanned In at Bluefly" AND t1.`status_dt` = SYSDATE()
THEN 1
ELSE NULL
END ) as "Arrived_Today",
COUNT(
CASE WHEN t1.`sample_status` =  "Scanned Out to Warehouse" AND t1.`status_dt` = SYSDATE()
THEN 1
ELSE NULL
END ) as "Returned_Today",
FROM
     `data_imagepaths`.`product_snapshot_live` t1
GROUP BY t1.`production_status`, t1.`product_category`





SELECT t1.`status_dt`,
COUNT(
CASE WHEN t1.`sample_status` =  "Scanned In at Bluefly" AND t1.`status_dt` = SYSDATE()
THEN 1
ELSE NULL
END ) as "Arrived_Today",
COUNT(
CASE WHEN t1.`sample_status` =  "Scanned Out to Warehouse" AND t1.`status_dt` = SYSDATE()
THEN 1
ELSE NULL
END ) as "Returned_Today",
COUNT(
CASE WHEN t1.`sample_status` =  "Scanned In at Bluefly" AND t1.`status_dt` = SYSDATE() -  1
THEN 1
ELSE NULL
END ) as "Arrived_Yesterday",
COUNT(
CASE WHEN t1.`sample_status` =  "Scanned Out to Warehouse" AND t1.`status_dt` = SYSDATE() - 1
THEN 1
ELSE NULL
END ) as "Returned_Yesterday",
COUNT(
CASE WHEN t1.`sample_status` =  "Sample Sent to Bluefly" AND t1.`status_dt` = SYSDATE() - 1
THEN 1
ELSE NULL
END ) as "Arriving_NY_Tomorrow"
FROM `data_imagepaths`.`product_snapshot_live` t1
GROUP BY t1.`status_dt`
order by status_dt desc
Limit 10











SELECT DISTINCT MAX(POMGR.PRODUCT_COLOR.ID) AS colorstyle,POMGR.BRAND.NAME AS brand,POMGR.LK_PRODUCT_STATUS.NAMEAS production_status,MAX(POMGR.PO_LINE.PO_HDR_ID) AS po_number,MAX(POMGR.LK_SAMPLE_STATUS.NAME) AS sample_status,MAX(to_date(POMGR.SAMPLE_TRACKING.CREATE_DT, 'YYYY-MM-DD')) AS status_dt,to_date(POMGR.PRODUCT_COLOR.COPY_READY_DT, 'YYYY-MM-DD') AS copy_ready_dt,to_date(POMGR.PRODUCT_COLOR.IMAGE_READY_DT, 'YYYY-MM-DD') AS image_ready_dt,to_date(POMGR.PRODUCT_COLOR.PRODUCTION_COMPLETE_DT, 'YYYY-MM-DD') AS production_complete_dt,to_date(POMGR.PRODUCT_COLOR.START_DATE, 'YYYY-MM-DD') AS start_dt,to_date(POMGR.PRODUCT_COLOR.ORIGINAL_START_DATE, 'YYYY-MM-DD') AS orig_start_dt,POMGR.LK_DEPT.NAMEAS gender,POMGR.BUYER_PRODUCT_LINE.NAME AS category,MAX(POMGR.CATEGORY.NAME) AS product_type,to_date(POMGR.PRODUCT_COLOR_DETAIL.PHOTOGRAPHED_DATE, 'YYYY-MM-DD') AS sample_image_dt,POMGR.PRODUCT_COLOR.VENDOR_STYLE AS vendor_style,POMGR.COLOR_GROUP.DESCRIPTIONAS color,MAX(POMGR.PRODUCT_FOLDER.LABEL) AS product_subtype,MAX(POMGR.SAMPLE_TRACKING_NUMBER.SAMPLE_ID) AS sample_id,MAX(POMGR.SKU.SKU_CODE) AS sku,MAX(POMGR.TRACKING_NUMBER.REF_NUMBER) AS track_number,MAX(to_date(POMGR.TRACKING_NUMBER.CREATE_DT, 'YYYY-MM-DD')) AS track_dt,MAX(POMGR.LK_SAMPLE_LOCATION.NAME)AS sample_location,MAX(POMGR.USERS.USERNAME) AS track_user,POMGR.LK_PO_TYPE.NAME AS po_type FROM POMGR.PRODUCT_COLOR LEFT JOIN POMGR.COLOR_GROUP ON POMGR.PRODUCT_COLOR.COLOR_GROUP_ID = POMGR.COLOR_GROUP.ID LEFT JOIN POMGR.LK_PRODUCT_STATUS ON POMGR.PRODUCT_COLOR.PRODUCTION_STATUS_ID = POMGR.LK_PRODUCT_STATUS.ID LEFT JOIN POMGR.PRODUCT_COLOR_DETAIL ON POMGR.PRODUCT_COLOR.ID = POMGR.PRODUCT_COLOR_DETAIL.PRODUCT_COLOR_ID LEFT JOIN POMGR.SKU ON POMGR.PRODUCT_COLOR.ID = POMGR.SKU.PRODUCT_COLOR_ID LEFT JOIN POMGR.PO_SKU ON POMGR.SKU.ID = POMGR.PO_SKU.SKU_ID LEFT JOIN POMGR.SAMPLE ON POMGR.SAMPLE.PO_SKU_ID = POMGR.PO_SKU.ID LEFT JOIN POMGR.SAMPLE_TRACKING ON POMGR.SAMPLE.ID = POMGR.SAMPLE_TRACKING.SAMPLE_ID LEFT JOIN POMGR.USERS ON POMGR.SAMPLE_TRACKING.USER_ID = POMGR.USERS.ID LEFT JOIN POMGR.LK_SAMPLE_STATUS ON POMGR.SAMPLE_TRACKING.STATUS_ID = POMGR.LK_SAMPLE_STATUS.ID LEFT JOIN POMGR.SAMPLE_TRACKING_NUMBER ON POMGR.SAMPLE_TRACKING.SAMPLE_ID = POMGR.SAMPLE_TRACKING_NUMBER.SAMPLE_ID LEFT JOIN POMGR.TRACKING_NUMBER ON POMGR.SAMPLE_TRACKING_NUMBER.TRACKING_NUMBER_ID = POMGR.TRACKING_NUMBER.ID LEFT JOIN POMGR.LK_SAMPLE_LOCATION ON POMGR.SAMPLE_TRACKING.LOCATION_ID = POMGR.LK_SAMPLE_LOCATION.ID LEFT JOIN POMGR.PO_LINE ON POMGR.PO_SKU.PO_LINE_ID = POMGR.PO_LINE.ID LEFT JOIN POMGR.PO_HDR ON POMGR.PO_LINE.PO_HDR_ID = POMGR.PO_HDR.ID LEFT JOIN POMGR.LK_PO_STATUS ON POMGR.PO_HDR.PO_STATUS_ID = POMGR.LK_PO_STATUS.ID LEFT JOIN POMGR.LK_PO_TYPE ON POMGR.PO_HDR.PO_TYPE_ID = POMGR.LK_PO_TYPE.ID LEFT JOIN POMGR.PRODUCT ON POMGR.PRODUCT_COLOR.PRODUCT_ID = POMGR.PRODUCT.ID INNER JOIN POMGR.BRAND ON POMGR.PRODUCT.BRAND_ID = POMGR.BRAND.ID INNER JOIN POMGR.PRODUCT_FOLDER ON POMGR.PRODUCT.PRODUCT_FOLDER_ID = POMGR.PRODUCT_FOLDER.ID LEFT JOIN POMGR.PRD_FDR_CAT_REL ON POMGR.PRODUCT.PRODUCT_FOLDER_ID = POMGR.PRD_FDR_CAT_REL.FOLDER_ID LEFT JOIN POMGR.CATEGORY ON POMGR.CATEGORY.ID = POMGR.PRD_FDR_CAT_REL.CATEGORY_ID LEFT JOIN POMGR.BUYER_PRODUCT_LINE ON POMGR.PRODUCT.BUYER_PRODUCT_LINE_ID = POMGR.BUYER_PRODUCT_LINE.ID LEFT JOIN POMGR.LK_DEPT ON POMGR.LK_DEPT.ID = POMGR.BUYER_PRODUCT_LINE.DEPT_ID WHERE POMGR.SAMPLE_TRACKING.CREATE_DT >= TRUNC(SysDate - 365) GROUP BY POMGR.BRAND.NAME,POMGR.LK_PRODUCT_STATUS.NAME,to_date(POMGR.PRODUCT_COLOR.COPY_READY_DT, 'YYYY-MM-DD'),to_date(POMGR.PRODUCT_COLOR.IMAGE_READY_DT, 'YYYY-MM-DD'),to_date(POMGR.PRODUCT_COLOR.PRODUCTION_COMPLETE_DT, 'YYYY-MM-DD'),to_date(POMGR.PRODUCT_COLOR.START_DATE, 'YYYY-MM-DD'),to_date(POMGR.PRODUCT_COLOR.ORIGINAL_START_DATE, 'YYYY-MM-DD'),POMGR.LK_DEPT.NAME,POMGR.BUYER_PRODUCT_LINE.NAME,to_date(POMGR.PRODUCT_COLOR_DETAIL.PHOTOGRAPHED_DATE, 'YYYY-MM-DD'),POMGR.PRODUCT_COLOR.VENDOR_STYLE,POMGR.COLOR_GROUP.DESCRIPTION,POMGR.LK_PO_TYPE.NAME,POMGR.PRODUCT.BRAND_ID ORDER by MAX(POMGR.PRODUCT_COLOR.ID) ASC

SELECT DISTINCT
 colorstyle, brand, production_status, po_number, sample_status, status_dt, copy_ready_dt, image_ready_dt, production_complete_dt, start_dt, orig_start_dt, gender, category, product_type, sample_image_dt, vendor_style, color, product_subtype, sample_id, sku, track_number, track_dt, sample_location, track_user, po_type

SELECT DISTINCT
AS "colorstyle",
AS "brand",
AS "production_status",
AS "po_number",
AS "sample_status",
AS "status_dt",
AS "copy_ready_dt",
AS "image_ready_dt",
AS "production_complete_dt",
AS "start_dt",
AS  "orig_start_dt",
AS "gender",
AS "category",
AS "product_type",
AS "sample_image_dt",
AS "vendor_style",
AS "color",
AS "product_subtype",
AS "sample_id",
AS "sku",
AS "track_number",
AS "track_dt",
AS "sample_location",
AS "track_user",
 POMGR.LK_PO_TYPE.NAME                                               AS "po_type"